DROP DATABASE IF EXISTS assignment_first;
CREATE DATABASE assignment_first;
USE assignment_first;

CREATE TABLE artists (
  artist_id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  country VARCHAR(50),
  debut_year INT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE genres (
  genre_id INT PRIMARY KEY,
  name VARCHAR(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE songs (
  song_id INT PRIMARY KEY,
  artist_id INT NOT NULL,
  genre_id INT NOT NULL,
  title VARCHAR(120) NOT NULL,
  release_date DATE NOT NULL,
  duration_sec INT NOT NULL
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE listeners (
  listener_id INT PRIMARY KEY,
  full_name VARCHAR(100) NOT NULL,
  country VARCHAR(50)
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE plays (
  play_id INT PRIMARY KEY,
  listener_id INT NOT NULL,
  song_id INT NOT NULL,
  played_at DATETIME NOT NULL,
  device VARCHAR(40),
  FOREIGN KEY (listener_id) REFERENCES listeners(listener_id),
  FOREIGN KEY (song_id)REFERENCES songs(song_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

INSERT INTO artists VALUES
(1,'alyona alyona','Ukraine',2018),
(2,'MONATIK','Ukraine',2011),
(3,'KALUSH','Ukraine',2019),
(4,'Okean Elzy','Ukraine',1994),
(5,'The Hardkiss','Ukraine',2011),
(6,'Jamala','Ukraine',2008),
(7,'Tina Karol','Ukraine',2005),
(8,'Skryabin','Ukraine',1989);
  
INSERT INTO genres VALUES
(1,'Pop'),
(2,'Hip-hop'),
(3,'Rock'),
(4,'Electronic'),
(5,'Folk'),
(6,'Indie');
  
INSERT INTO songs VALUES
(101,1,2,'Рибки', '2019-03-15', 185),
(102,1,2,'Пушка', '2020-05-10', 200),
(201,2,1,'LOVE IT ритм','2016-06-01', 210),
(202,2,4,'Vitamin D','2022-11-12', 198),
(301,3,2,'Стефанія','2022-02-15', 190),
(302,3,5,'Зоря','2023-09-05', 205),
(401,4,3,'Обійми','2013-09-20', 255),
(402,4,3,'Коли нам було 20','2016-04-18', 230),
(501,5,4,'Make-Up','2018-09-01', 216),
(601,6,5,'1944','2016-05-15', 180);
  
INSERT INTO listeners VALUES
(1,'Yesieniia Smetanina','Ukraine'),
(2,'Vasyl Moisieiev','Ukraine'),
(3,'Angelina Shynkarenko','Ukraine'),
(4,'Kirsten Dallmann','Germany'),
(5,'Sofiia Danilova','USA'),
(6,'Dariia Sliota','Ukraine'),
(7,'Dariia Volovyk','Ukraine');

INSERT INTO plays VALUES
(1, 1,301,'2025-01-03 09:12:00','iOS'),
(2, 3,401,'2025-01-05 20:15:00','Web'),
(3, 4,201,'2025-02-10 14:10:00','Android'),
(4, 6,601,'2025-02-20 18:30:00','iOS'),
(5, 7,202,'2025-03-01 08:25:00','Android'),
(6, 5,102,'2025-03-15 22:00:00','Web'),
(7, 2,501,'2025-04-01 16:30:00','iOS'),
(8, 1,201,'2025-04-12 11:45:00','Web'),
(9, 3,402,'2025-05-07 19:55:00','Android'),
(10,4,302,'2025-05-20 21:15:00','iOS');

USE assignment_first;

WITH recent_plays AS (
  SELECT *
  FROM plays
  WHERE played_at >= '2020-01-01'
)
SELECT
g.name AS genre,
a.name AS artist,
s.title AS song,
COUNT(*) AS streams,
COUNT(DISTINCT l.listener_id) AS unique_listeners,
(SELECT COUNT(*) FROM plays p_all WHERE p_all.song_id = s.song_id) AS total_plays_all_time
   
FROM recent_plays p
JOIN songs s ON s.song_id = p.song_id
JOIN artists a ON a.artist_id = s.artist_id
JOIN genres g ON g.genre_id = s.genre_id
JOIN listeners l ON l.listener_id = p.listener_id
WHERE s.release_date >= '2000-01-01'

GROUP BY g.name, a.name, s.title, s.song_id
HAVING COUNT(*) > 1

ORDER BY streams DESC
LIMIT 20;

SELECT 'Artists table' AS source, name AS title_or_name
FROM artists

UNION ALL

SELECT 'Songs table' AS source, title AS title_or_name
FROM songs;
